/*
	SDZControl.h
	The implementation of properties and methods for the SDZControl object.
	Generated by SudzC.com
*/
#import "SDZControl.h"

#import "SDZActions.h"
@implementation SDZControl
	@synthesize name = _name;
	@synthesize label = _label;
	@synthesize description = _description;
	@synthesize readOnly = _readOnly;
	@synthesize isQueryAble = _isQueryAble;
	@synthesize isNumeric = _isNumeric;
	@synthesize numericUnit = _numericUnit;
	@synthesize min = _min;
	@synthesize max = _max;
	@synthesize isGlobal = _isGlobal;
	@synthesize isGUI = _isGUI;
	@synthesize actions = _actions;

	- (id) init
	{
		if(self = [super init])
		{
			self.name = nil;
			self.label = nil;
			self.description = nil;
			self.numericUnit = nil;
			self.actions = [[NSMutableArray alloc] init];

		}
		return self;
	}

	+ (SDZControl*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZControl*)[[SDZControl alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.name = [Soap getNodeValue: node withName: @"name"];
			self.label = [Soap getNodeValue: node withName: @"label"];
			self.description = [Soap getNodeValue: node withName: @"description"];
			self.readOnly = [[Soap getNodeValue: node withName: @"readOnly"] boolValue];
			self.isQueryAble = [[Soap getNodeValue: node withName: @"isQueryAble"] boolValue];
			self.isNumeric = [[Soap getNodeValue: node withName: @"isNumeric"] boolValue];
			self.numericUnit = [Soap getNodeValue: node withName: @"numericUnit"];
			self.min = [[Soap getNodeValue: node withName: @"min"] intValue];
			self.max = [[Soap getNodeValue: node withName: @"max"] intValue];
			self.isGlobal = [[Soap getNodeValue: node withName: @"isGlobal"] boolValue];
			self.isGUI = [[Soap getNodeValue: node withName: @"isGUI"] boolValue];
			self.actions = [[SDZActions newWithNode: [Soap getNode: node withName: @"actions"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Control"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.name != nil) [s appendFormat: @"<name>%@</name>", [[self.name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.label != nil) [s appendFormat: @"<label>%@</label>", [[self.label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.description != nil) [s appendFormat: @"<description>%@</description>", [[self.description stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<readOnly>%@</readOnly>", (self.readOnly)?@"true":@"false"];
		[s appendFormat: @"<isQueryAble>%@</isQueryAble>", (self.isQueryAble)?@"true":@"false"];
		[s appendFormat: @"<isNumeric>%@</isNumeric>", (self.isNumeric)?@"true":@"false"];
		if (self.numericUnit != nil) [s appendFormat: @"<numericUnit>%@</numericUnit>", [[self.numericUnit stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<min>%@</min>", [NSString stringWithFormat: @"%i", self.min]];
		[s appendFormat: @"<max>%@</max>", [NSString stringWithFormat: @"%i", self.max]];
		[s appendFormat: @"<isGlobal>%@</isGlobal>", (self.isGlobal)?@"true":@"false"];
		[s appendFormat: @"<isGUI>%@</isGUI>", (self.isGUI)?@"true":@"false"];
		if (self.actions != nil && self.actions.count > 0) {
			[s appendFormat: @"<actions>%@</actions>", [SDZActions serialize: self.actions]];
		} else {
			[s appendString: @"<actions/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZControl class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
