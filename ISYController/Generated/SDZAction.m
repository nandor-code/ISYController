/*
	SDZAction.h
	The implementation of properties and methods for the SDZAction object.
	Generated by SudzC.com
*/
#import "SDZAction.h"

@implementation SDZAction
	@synthesize name = _name;
	@synthesize label = _label;
	@synthesize description = _description;
	@synthesize readOnly = _readOnly;

	- (id) init
	{
		if(self = [super init])
		{
			self.name = nil;
			self.label = nil;
			self.description = nil;

		}
		return self;
	}

	+ (SDZAction*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZAction*)[[SDZAction alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.name = [Soap getNodeValue: node withName: @"name"];
			self.label = [Soap getNodeValue: node withName: @"label"];
			self.description = [Soap getNodeValue: node withName: @"description"];
			self.readOnly = [[Soap getNodeValue: node withName: @"readOnly"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Action"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.name != nil) [s appendFormat: @"<name>%@</name>", [[self.name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.label != nil) [s appendFormat: @"<label>%@</label>", [[self.label stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.description != nil) [s appendFormat: @"<description>%@</description>", [[self.description stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<readOnly>%@</readOnly>", (self.readOnly)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZAction class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
