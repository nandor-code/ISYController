/*
	SDZService.h
	The interface definition of classes and methods for the Service web service.
	Generated by SudzC.com
*/
				
#import "Soap.h"
	
/* 
		Copyright 2007/2008 Universal Devices, Inc.
		All Rights Reserved

		Web Services Flag, Objects, Parameters, Messages, and Bindings for ISY
	 */
	
/* Add class references */
				
#import "SDZNodeParent.h"
#import "SDZUDLink.h"
#import "SDZfolder.h"
#import "SDZEmpty.h"
#import "SDZActions.h"
#import "SDZControls.h"
#import "SDZFeatures.h"
#import "SDZLastError.h"
#import "SDZDebugOptions.h"
#import "SDZSceneProfiles.h"
#import "SDZIDParam.h"
#import "SDZNameParam.h"
#import "SDZIDNameParam.h"
#import "SDZIDNameNodeTypeParam.h"
#import "SDZMoveNodeParam.h"
#import "SDZDiscoverNodesParam.h"
#import "SDZStopNodesDiscoveryParam.h"
#import "SDZInternetAccessParam.h"
#import "SDZLinkingModeParam.h"
#import "SDZRestoreDevicesParam.h"
#import "SDZSetDebugLevelParam.h"
#import "SDZUnsubscriptionParam.h"
#import "SDZIsSubscribedParam.h"
#import "SDZDDNSHostParam.h"
#import "SDZSystemOptions.h"
#import "SDZControl.h"
#import "SDZconfiguration.h"
#import "SDZnode.h"
#import "SDZgroup.h"
#import "SDZUPnPSpecifications.h"
#import "SDZUPnPInfo.h"
#import "SDZProduct.h"
#import "SDZDeviceRoot.h"
#import "SDZNotificationsOptions.h"
#import "SDZDBG.h"
#import "SDZSubscription.h"
#import "SDZDDNSHost.h"
#import "SDZQueryParam.h"
#import "SDZCredentialsParam.h"
#import "SDZAddNodeParam.h"
#import "SDZNodeControllerParam.h"
#import "SDZNodeGroupParam.h"
#import "SDZRestoreDeviceParam.h"
#import "SDZSecuritySystemActionParam.h"
#import "SDZSetSceneProfileParam.h"
#import "SDZSetNodeEnabledParam.h"
#import "SDZDDNSHostAndIPParam.h"
#import "SDZUDIDefaultResponse.h"
#import "SDZSystemStatus.h"
#import "SDZProgramOptions.h"
#import "SDZNTPOptions.h"
#import "SDZDriverError.h"
#import "SDZSceneProfile.h"
#import "SDZReplaceDeviceParam.h"
#import "SDZSubscriptionParam.h"
#import "SDZUDNode.h"
#import "SDZnodes.h"
#import "SDZAction.h"
#import "SDZFeature.h"
#import "SDZUDIServiceParam.h"
#import "SDZNodeHierarchyParam.h"
#import "SDZEvent.h"
#import "SDZDateTime.h"
#import "SDZDeviceSpecifications.h"
#import "SDZSMTPConfiguration.h"

/* Interface for the service */
				
@interface SDZService : SoapService
		
	/* Returns NSString*.  */
	- (SoapRequest*) UDIService: (id <SoapDelegate>) handler;
	- (SoapRequest*) UDIService: (id) target action: (SEL) action;

	/* Returns SDZDeviceSpecifications*. Returns the current configuration of ISY */
	- (SoapRequest*) GetISYConfig: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetISYConfig: (id) target action: (SEL) action;

	/* Returns NSString*. Returns the configuration of nodes, groups, scenes, and any relationship thereto */
	- (SoapRequest*) GetNodesConfig: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetNodesConfig: (id) target action: (SEL) action;

	/* Returns NSString*. Adds a scene/group */
	- (SoapRequest*) AddGroup: (id <SoapDelegate>) handler;
	- (SoapRequest*) AddGroup: (id) target action: (SEL) action;

	/* Returns NSString*. Removes a group (permanently) from configuration */
	- (SoapRequest*) RemoveGroup: (id <SoapDelegate>) handler;
	- (SoapRequest*) RemoveGroup: (id) target action: (SEL) action;

	/* Returns NSString*. Renames a group in configuration */
	- (SoapRequest*) RenameGroup: (id <SoapDelegate>) handler;
	- (SoapRequest*) RenameGroup: (id) target action: (SEL) action;

	/* Returns NSString*. Adds a folder */
	- (SoapRequest*) AddFolder: (id <SoapDelegate>) handler;
	- (SoapRequest*) AddFolder: (id) target action: (SEL) action;

	/* Returns NSString*. Removes a folder (permanently) from configuration */
	- (SoapRequest*) RemoveFolder: (id <SoapDelegate>) handler;
	- (SoapRequest*) RemoveFolder: (id) target action: (SEL) action;

	/* Returns NSString*. Renames a folder in configuration */
	- (SoapRequest*) RenameFolder: (id <SoapDelegate>) handler;
	- (SoapRequest*) RenameFolder: (id) target action: (SEL) action;

	/* Returns NSString*. Adds a predefined node for a device with a given address */
	- (SoapRequest*) AddNode: (id <SoapDelegate>) handler;
	- (SoapRequest*) AddNode: (id) target action: (SEL) action;

	/* Returns NSString*. Removes a node (permanently) from configuration */
	- (SoapRequest*) RemoveNode: (id <SoapDelegate>) handler;
	- (SoapRequest*) RemoveNode: (id) target action: (SEL) action;

	/* Returns NSString*. Renames a node in configuration */
	- (SoapRequest*) RenameNode: (id <SoapDelegate>) handler;
	- (SoapRequest*) RenameNode: (id) target action: (SEL) action;

	/* Returns NSString*. Moves a node into a group/scene */
	- (SoapRequest*) MoveNode: (id <SoapDelegate>) handler;
	- (SoapRequest*) MoveNode: (id) target action: (SEL) action;

	/* Returns NSString*. Removes a Node from a Group */
	- (SoapRequest*) RemoveFromGroup: (id <SoapDelegate>) handler;
	- (SoapRequest*) RemoveFromGroup: (id) target action: (SEL) action;

	/* Returns NSString*. Renames the Network name */
	- (SoapRequest*) RenameNetwork: (id <SoapDelegate>) handler;
	- (SoapRequest*) RenameNetwork: (id) target action: (SEL) action;

	/* Returns NSString*. Queries a node, a scene, or even the whole network */
	- (SoapRequest*) Query: (id <SoapDelegate>) handler;
	- (SoapRequest*) Query: (id) target action: (SEL) action;

	/* Returns NSString*. Changes the way ISY discovers nodes/devices ISY as a controller or ISY as a responder */
	- (SoapRequest*) SetLinkingMode: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetLinkingMode: (id) target action: (SEL) action;

	/* Returns NSString*. Puts ISY in discovery (linking) mode Optionally, provide the type of device to look for */
	- (SoapRequest*) StartNodesDiscovery: (id <SoapDelegate>) handler;
	- (SoapRequest*) StartNodesDiscovery: (id) target action: (SEL) action;

	/* Returns NSString*. The flag decides the operations (reset, crawl, spider) to be performed after device(s) are discovered */
	- (SoapRequest*) StopNodesDiscovery: (id <SoapDelegate>) handler;
	- (SoapRequest*) StopNodesDiscovery: (id) target action: (SEL) action;

	/* Returns NSString*. Enables/Disables port forwarding to ISY on UPnP enabled routers. This process might take a long time and, as such, one must take caution with TCP connect timeouts */
	- (SoapRequest*) InternetAccess: (id <SoapDelegate>) handler;
	- (SoapRequest*) InternetAccess: (id) target action: (SEL) action;

	/* Returns char. Returns the current state of ISY */
	- (SoapRequest*) GetSystemStatus: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetSystemStatus: (id) target action: (SEL) action;

	/* Returns long. Returns the current state of ISY */
	- (SoapRequest*) GetSystemDateTime: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetSystemDateTime: (id) target action: (SEL) action;

	/* Returns NSString*. Returns the current state of ISY */
	- (SoapRequest*) SetSystemDateTime: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetSystemDateTime: (id) target action: (SEL) action;

	/* Returns NSString*. Returns the options by which ISY is configured */
	- (SoapRequest*) GetSystemOptions: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetSystemOptions: (id) target action: (SEL) action;

	/* Returns BOOL. Returns the SMTP Options configured in ISY */
	- (SoapRequest*) GetSMTPConfig: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetSMTPConfig: (id) target action: (SEL) action;

	/* Returns NSString*. Sets SMTP Configuration Parameters */
	- (SoapRequest*) SetSMTPConfig: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetSMTPConfig: (id) target action: (SEL) action;

	/* Returns NSString*. Sets Notifications Options */
	- (SoapRequest*) SetNotificationsOptions: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetNotificationsOptions: (id) target action: (SEL) action;

	/* Returns NSString*. Sets Program Options */
	- (SoapRequest*) SetProgramOptions: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetProgramOptions: (id) target action: (SEL) action;

	/* Returns NSString*. Sets NTP Options */
	- (SoapRequest*) SetNTPOptions: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetNTPOptions: (id) target action: (SEL) action;

	/* Returns NSString*. Adjusts the clock to NTS */
	- (SoapRequest*) SynchWithNTS: (id <SoapDelegate>) handler;
	- (SoapRequest*) SynchWithNTS: (id) target action: (SEL) action;

	/* Returns NSString*. Reboots the system */
	- (SoapRequest*) Reboot: (id <SoapDelegate>) handler;
	- (SoapRequest*) Reboot: (id) target action: (SEL) action;

	/* Returns NSString*. Changes the userid and password for a user */
	- (SoapRequest*) SetUserCredentials: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetUserCredentials: (id) target action: (SEL) action;

	/* Returns NSString*. Restores devices from the configuration in ISY */
	- (SoapRequest*) RestoreDevices: (id <SoapDelegate>) handler;
	- (SoapRequest*) RestoreDevices: (id) target action: (SEL) action;

	/* Returns NSString*. Restores a specific device from the configuration in ISY */
	- (SoapRequest*) RestoreDevice: (id <SoapDelegate>) handler;
	- (SoapRequest*) RestoreDevice: (id) target action: (SEL) action;

	/* Returns NSString*. Replaces the modem attached to ISY and reconfigures devices if necessary */
	- (SoapRequest*) ReplaceModem: (id <SoapDelegate>) handler;
	- (SoapRequest*) ReplaceModem: (id) target action: (SEL) action;

	/* Returns NSString*. Replaces the modem attached to ISY and reconfigures devices if necessary */
	- (SoapRequest*) RemoveModem: (id <SoapDelegate>) handler;
	- (SoapRequest*) RemoveModem: (id) target action: (SEL) action;

	/* Returns NSString*. Replaces one device with another (swap) */
	- (SoapRequest*) ReplaceDevice: (id <SoapDelegate>) handler;
	- (SoapRequest*) ReplaceDevice: (id) target action: (SEL) action;

	/* Returns NSString*. Arm/disarm a security system */
	- (SoapRequest*) SecuritySystemAction: (id <SoapDelegate>) handler;
	- (SoapRequest*) SecuritySystemAction: (id) target action: (SEL) action;

	/* Returns NSMutableArray*. Gets the debug options and current level */
	- (SoapRequest*) GetDebugLevel: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetDebugLevel: (id) target action: (SEL) action;

	/* Returns NSString*. Gets the debug options and current level */
	- (SoapRequest*) SetDebugLevel: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetDebugLevel: (id) target action: (SEL) action;

	/* Returns SDZSceneProfile*. 
				Gets the profile attributes for responders.
				Set the controller element to scene's address and:
				In case this is an ISY scene, set the node element to "none."
				In case this is a controller for a scene, set the node element to the controller's address
			 */
	- (SoapRequest*) GetSceneProfiles: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetSceneProfiles: (id) target action: (SEL) action;

	/* Returns NSString*. 
				Sets the profile attribute for responders.
				Set the controller element to scene's address and:
				In case this is an ISY scene, set the node element to "none"
				In case this is a controller for a scene, set the node element to the responder's address
			 */
	- (SoapRequest*) SetSceneProfile: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetSceneProfile: (id) target action: (SEL) action;

	/* Returns NSString*. 
				reportURL: To reuse the socket, use REUSE_SOCKET as the value
				duration: use infinite
			 */
	- (SoapRequest*) Subscribe: (id <SoapDelegate>) handler;
	- (SoapRequest*) Subscribe: (id) target action: (SEL) action;

	/* Returns NSString*. Unsubscribe from ISY */
	- (SoapRequest*) Unsubscribe: (id <SoapDelegate>) handler;
	- (SoapRequest*) Unsubscribe: (id) target action: (SEL) action;

	/* Returns NSString*. Whether or not the client still holds a subscription to ISY */
	- (SoapRequest*) IsSubscribed: (id <SoapDelegate>) handler;
	- (SoapRequest*) IsSubscribed: (id) target action: (SEL) action;

	/* Returns NSString*. Sends a test email. This is used to check SMTP settings. */
	- (SoapRequest*) SendTestEmail: (id <SoapDelegate>) handler;
	- (SoapRequest*) SendTestEmail: (id) target action: (SEL) action;

	/* Returns NSString*. Clears the list of recent errors in ISY */
	- (SoapRequest*) ClearLastError: (id <SoapDelegate>) handler;
	- (SoapRequest*) ClearLastError: (id) target action: (SEL) action;

	/* Returns SDZDriverError*. Gets the list of recent errors in ISY */
	- (SoapRequest*) GetLastError: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetLastError: (id) target action: (SEL) action;

	/* Returns NSString*. Enables or disables a node */
	- (SoapRequest*) SetNodeEnabled: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetNodeEnabled: (id) target action: (SEL) action;

	/* Returns NSString*. Sets a parent for a node */
	- (SoapRequest*) SetParent: (id <SoapDelegate>) handler;
	- (SoapRequest*) SetParent: (id) target action: (SEL) action;

	/* Returns NSString*. Whether or not a DDNS Host is available */
	- (SoapRequest*) IsDDNSHostAvail: (id <SoapDelegate>) handler;
	- (SoapRequest*) IsDDNSHostAvail: (id) target action: (SEL) action;

	/* Returns NSString*. Returns the currently configured DDNS host */
	- (SoapRequest*) GetDDNSHost: (id <SoapDelegate>) handler;
	- (SoapRequest*) GetDDNSHost: (id) target action: (SEL) action;

	/* Returns NSString*. Registers and DDNS host with the associated IP */
	- (SoapRequest*) AddDDNSHost: (id <SoapDelegate>) handler;
	- (SoapRequest*) AddDDNSHost: (id) target action: (SEL) action;

	/* Returns NSString*. Removes the registered DDNS host. Must use GetDDNSHost */
	- (SoapRequest*) RemoveDDNSHost: (id <SoapDelegate>) handler;
	- (SoapRequest*) RemoveDDNSHost: (id) target action: (SEL) action;

		
	+ (SDZService*) service;
	+ (SDZService*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password;
@end
	