/*
	SDZSystemOptions.h
	The implementation of properties and methods for the SDZSystemOptions object.
	Generated by SudzC.com
*/
#import "SDZSystemOptions.h"

@implementation SDZSystemOptions
	@synthesize MailTo = _MailTo;
	@synthesize CompactEmail = _CompactEmail;
	@synthesize QueryOnInit = _QueryOnInit;
	@synthesize PCatchUp = _PCatchUp;
	@synthesize PGracePeriod = _PGracePeriod;
	@synthesize NTPHost = _NTPHost;
	@synthesize NTPActive = _NTPActive;
	@synthesize NTPEnabled = _NTPEnabled;
	@synthesize NTPInterval = _NTPInterval;
	@synthesize WaitBusyReading = _WaitBusyReading;
	@synthesize HTMLRole = _HTMLRole;

	- (id) init
	{
		if(self = [super init])
		{
			self.MailTo = nil;
			self.NTPHost = nil;

		}
		return self;
	}

	+ (SDZSystemOptions*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZSystemOptions*)[[SDZSystemOptions alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.MailTo = [Soap getNodeValue: node withName: @"MailTo"];
			self.CompactEmail = [[Soap getNodeValue: node withName: @"CompactEmail"] boolValue];
			self.QueryOnInit = [[Soap getNodeValue: node withName: @"QueryOnInit"] boolValue];
			self.PCatchUp = [[Soap getNodeValue: node withName: @"PCatchUp"] boolValue];
			self.PGracePeriod = [[Soap getNodeValue: node withName: @"PGracePeriod"] intValue];
			self.NTPHost = [Soap getNodeValue: node withName: @"NTPHost"];
			self.NTPActive = [[Soap getNodeValue: node withName: @"NTPActive"] boolValue];
			self.NTPEnabled = [[Soap getNodeValue: node withName: @"NTPEnabled"] boolValue];
			self.NTPInterval = [[Soap getNodeValue: node withName: @"NTPInterval"] intValue];
			self.WaitBusyReading = [[Soap getNodeValue: node withName: @"WaitBusyReading"] boolValue];
			self.HTMLRole = [[Soap getNodeValue: node withName: @"HTMLRole"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"SystemOptions"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.MailTo != nil) [s appendFormat: @"<MailTo>%@</MailTo>", [[self.MailTo stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<CompactEmail>%@</CompactEmail>", (self.CompactEmail)?@"true":@"false"];
		[s appendFormat: @"<QueryOnInit>%@</QueryOnInit>", (self.QueryOnInit)?@"true":@"false"];
		[s appendFormat: @"<PCatchUp>%@</PCatchUp>", (self.PCatchUp)?@"true":@"false"];
		[s appendFormat: @"<PGracePeriod>%@</PGracePeriod>", [NSString stringWithFormat: @"%i", self.PGracePeriod]];
		if (self.NTPHost != nil) [s appendFormat: @"<NTPHost>%@</NTPHost>", [[self.NTPHost stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<NTPActive>%@</NTPActive>", (self.NTPActive)?@"true":@"false"];
		[s appendFormat: @"<NTPEnabled>%@</NTPEnabled>", (self.NTPEnabled)?@"true":@"false"];
		[s appendFormat: @"<NTPInterval>%@</NTPInterval>", [NSString stringWithFormat: @"%i", self.NTPInterval]];
		[s appendFormat: @"<WaitBusyReading>%@</WaitBusyReading>", (self.WaitBusyReading)?@"true":@"false"];
		[s appendFormat: @"<HTMLRole>%@</HTMLRole>", [NSString stringWithFormat: @"%i", self.HTMLRole]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZSystemOptions class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
